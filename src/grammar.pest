Program  = _{ SOI ~ ExprList ~ EOI }
ExprList =  { (Expr ~ ";")* ~ Expr }
Expr     = _{ BinaryExpr | Term | If }

// Int (Int -> Int)
Int  = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT) }
Bool = @{ "True" | "False" }

Term = _{ Int | Bool | "(" ~ Expr ~ ")" }

BinaryExpr   =  { Term ~ Operator ~ Term }
Operator     =  { IntOperator | CompOperator | BoolOperator }
IntOperator  = _{ "+" | "-" | "*" | "/" }
CompOperator = _{ "<" | "<=" | ">" | ">=" | "==" | "!=" }
BoolOperator = _{ "&&" | "||" }

// If
If = { "if(" ~ Expr ~ ")" ~ "{" ~ ExprList ~ "}" ~ "else" ~ "{" ~ ExprList ~ "}" }

WHITESPACE = _{ " " | "\t" | NEWLINE }